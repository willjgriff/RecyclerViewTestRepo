apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.github.willjgriff.playground"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "THE_MOVIE_DB_API_KEY", "\"$theMovieDbApiKey\""

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        prod {

        }
        mock {
            applicationIdSuffix = ".mock"
        }
    }

    def appModules = ['network', 'mvp', 'navigation', 'lists', 'tabs', 'coord', 'soquestions', 'movies', 'ethereum', 'signup', 'constraint']

    sourceSets {
        main {
            java.srcDirs += appModules.collect { "../$it/src/main/java" }
            res.srcDirs += appModules.collect { "../$it/src/main/res" }
        }
        test {
            java.srcDirs += appModules.collect { "../$it/src/test/java" }
        }
        androidTest {
            java.srcDirs += appModules.collect { "../$it/src/androidTest/java" }
            assets.srcDirs += appModules.collect { "../$it/src/androidTest/assets" }
        }
        prod {
            java.srcDirs += appModules.collect { "../$it/src/prod/java" }
        }
        mock {
            java.srcDirs += appModules.collect { "../$it/src/mock/java" }
            assets.srcDirs += appModules.collect { "../$it/src/mock/assets" }
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

ext {
    supportLib  = '23.4.0'
    constraint  = '1.0.0-alpha1'
    fab         = '1.10.1'
    gson        = '2.4'
    retrofit    = '2.0.0'
    picasso     = '2.5.2'
    guava       = '18.0'
    rxAndroid   = '0.25.0'
    dagger      = '2.2'
    javax       = '1.0'
    robolectric = '3.0'
    mockito     = '1.9.5'
    espresso    = '2.2'
    contrib     = '2.2.2'
    runner      = '0.3'
    mockserver  = '2.5.0'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:${supportLib}"
    compile "com.android.support:design:${supportLib}"
    compile "com.android.support:cardview-v7:${supportLib}"
    compile "com.android.support:recyclerview-v7:${supportLib}"
    compile "com.android.support.constraint:constraint-layout:${constraint}"

    compile "com.squareup.retrofit2:retrofit:${retrofit}"
    compile "com.squareup.retrofit2:adapter-rxjava:${retrofit}"
    compile "com.squareup.retrofit2:converter-gson:${retrofit}"
    compile "com.getbase:floatingactionbutton:${fab}"
    compile "com.squareup.picasso:picasso:${picasso}"
    compile "com.google.guava:guava:${guava}"
    compile "io.reactivex:rxandroid:${rxAndroid}"

    // Dagger 2
    apt "com.google.dagger:dagger-compiler:${dagger}"
    compile "com.google.dagger:dagger:${dagger}"
    provided "javax.annotation:jsr250-api:${javax}"

    testCompile "org.robolectric:robolectric:${robolectric}"
    testCompile "org.robolectric:shadows-support-v4:${robolectric}"
    testCompile "org.mockito:mockito-core:${mockito}"

    androidTestCompile("com.android.support.test.espresso:espresso-core:${espresso}") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:${contrib}") {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
        exclude module: 'support-v13'
        exclude module: 'recyclerview-v7'
        exclude module: 'appcompat-v7'
        exclude module: 'design'
    }
    androidTestCompile("com.android.support.test:runner:${runner}") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile "com.squareup.retrofit2:retrofit-mock:${retrofit}"
    androidTestCompile "com.squareup.okhttp:mockwebserver:${mockserver}"

}
